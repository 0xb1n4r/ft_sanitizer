!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
FT_SANITIZER_H	ft_sanitizer.h	/^# define FT_SANITIZER_H$/;"	d
NULL	ft_sanitizer.c	/^# define NULL /;"	d	file:
add_to_list	ft_sanitizer.c	/^void add_to_list(int len, void *p, char *file, int line, t_info *head)$/;"	f
filename	ft_sanitizer.h	/^	char			*filename;	\/\/ The filename where leak occured$/;"	m	struct:s_info
len	ft_sanitizer.h	/^	int 			len;$/;"	m	struct:s_info
line	ft_sanitizer.h	/^	size_t 			line;	\/\/ The line where leak occured$/;"	m	struct:s_info
main	ft_sanitizer.c	/^int main(void)$/;"	f
main	main.c	/^int main(void)$/;"	f
next	ft_sanitizer.h	/^	struct s_info	*next;	\/\/ Hmm obvious this one.$/;"	m	struct:s_info	typeref:struct:s_info::s_info
print_leaks	ft_sanitizer.c	/^void print_leaks(t_info *head)$/;"	f
ptr	ft_sanitizer.h	/^	void			*ptr;	\/\/ Adresses of allocated memories$/;"	m	struct:s_info
remove_from_list	ft_sanitizer.c	/^void remove_from_list(void *p, char *s, int line, t_info *head)$/;"	f
s_info	ft_sanitizer.h	/^typedef struct	s_info$/;"	s
t_info	ft_sanitizer.h	/^typedef struct s_info t_info;$/;"	t	typeref:struct:s_info
t_info	ft_sanitizer.h	/^}	t_info;$/;"	t	typeref:struct:s_info
